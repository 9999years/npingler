---
# This workflow runs when PRs are merged and tags/builds/publishes a release.

# Run when PRs to main are closed.
on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

name: Build and publish a release

jobs:
  # We make `if_merged` a `needs:` of the other jobs here to only run this
  # workflow on merged PRs.
  if_merged:
    permissions:
      issues: write
      pull-requests: write
    name: Check that PR was merged and not closed
    if: github.event_name == 'workflow_dispatch'
      || (
        github.event.pull_request.merged == true
        && contains(github.event.pull_request.labels.*.name, 'release')
      )
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "This is a canonical hack to run GitHub Actions on merged PRs"
          echo "See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-pull_request-workflow-when-a-pull-request-merges"

      - name: Comment on PR with link to this action
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            [This release is now being built.][run]

            [run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  version:
    name: Get version number
    needs: if_merged
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_cargo_metadata.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: cachix/install-nix-action@v31

      - name: Get version number
        id: get_cargo_metadata
        run: echo "version=$(nix run .#get-crate-version)" >> "$GITHUB_OUTPUT"

  build:
    name: Release Build
    needs: if_merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: cachix/install-nix-action@v31

      - name: Build npingler
        run: |
          nix build --no-link --print-out-paths --print-build-logs -f .

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          nix run -f . cargo -- publish --no-verify

  upload:
    name: Upload assets to release
    runs-on: ubuntu-latest
    needs:
      - if_merged
      - build
      - version
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      # See: https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#authenticating-with-github-app-generated-tokens
      - uses: actions/create-github-app-token@v2
        id: generate_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Tag the release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          commit_sha: ${{ github.sha }}
          # Note: This action automatically applies a prefix for us!
          custom_tag: ${{ needs.version.outputs.version }}

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ steps.generate_token.outputs.token }}
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: v${{ needs.version.outputs.version }}

      - name: Comment on PR with link to the release
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          token: ${{ steps.generate_token.outputs.token }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            [Release ${{ needs.version.outputs.version }}][release] was built and published successfully!

            [release]: ${{ steps.create_release.outputs.url }}
